{"version":3,"sources":["Components/AddCategorias.js","helpers/GetGifs.js","Components/GiftGridItem.js","Components/GiftGrid.js","hooks/useFetchGifs.js","GistExpertApp.js","index.js"],"names":["AddCategorias","setCategorias","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","Gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAehD,OACI,sBAAMC,SATgB,SAACC,GACvBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATlB,kBAYbM,GAZa,4CAAH,sDCDRO,EAAe,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAMV,EAAW,EAAXA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,4BAAIA,QCHFO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,QAEZ,CAACpB,IAIGqB,EDjBqBM,CAAc3B,GAAhCa,EAD4B,EACjCN,KAAaa,EADoB,EACpBA,QAEpB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEURiB,EAvBO,WAAO,IAAD,EAEY1C,mBAAS,CAAC,SAFtB,mBAEjB2C,EAFiB,KAEL5C,EAFK,KAIxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAeA,cAAiBA,IAChC,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCZ7B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dafcb7b3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategorias = ({ setCategorias }) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleInputSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (InputValue.trim().length > 2) {\r\n            setCategorias(cats => [ InputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleInputSubmit}>\r\n            <input\r\n                type='text'\r\n                value={InputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategorias.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n export const GetGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=i8r7IxCHW1Lu7xKRr9mQGY4Z2O1BKf8l`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const Gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    });\r\n    return Gifs;\r\n  }","import React from 'react'\r\n\r\nexport const GiftGridItem = ( { title,url } ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n           <img src= {url} alt={title} ></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n  const {data:images, loading}= useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__bounce' >{category}</h3>\r\n      {loading && <p className='animate__animated animate__flash' >Loading</p> }\r\n      <div className='card-grid'>\r\n\r\n        {\r\n          images.map(img => (\r\n            <GiftGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport {GetGifs} from '../helpers/GetGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        GetGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 0);\r\n            });\r\n    }, [category]);\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategorias } from './Components/AddCategorias';\r\nimport { GiftGrid } from './Components/GiftGrid';\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['goku']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategorias setCategorias = {setCategorias}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( category =>\r\n                        <GiftGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GistExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}